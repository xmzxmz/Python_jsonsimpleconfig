[project-info]
package = jsonsimpleconfig
develop = {env:PYTHON_DEVELOP:false}
passenv = PYTHON_* LOGNAME* USER* LNAME USERNAME HOME*
          PROCESSOR_ARCHITECTURE PIP_CONFIG_FILE LC_CTYPE LC_ALL LANG CODESPACES
whitelist_externals = git poetry

[flake8]
max-line-length = 120
max-complexity = 10

[testenv:ci-test]
; Executes all tests, including code coverage, etc.
passenv={[project-info]passenv}
whitelist_externals={[project-info]whitelist_externals}
deps = .[tests]
commands=pytest tests --cov src/{[project-info]package} --cov-report=xml --junitxml=junit-{envname}.xml {posargs}

[pytest]
addopts =
    --doctest-modules
    --showlocals
    --ignore=setup.py
junit_family = xunit2
python_files = test_*.py !check_*.py !legacy_*.py
norecursedirs = .git .svn .tox .hatchery.work build config log logs tmp* legacy data vagrant locust
                # ^ NO TRAILING SLASHES ON DIRECTORIES!!

[tox]
envlist = py39
toxworkdir = {env:TOX_WORK_DIR:{toxinidir}/.tox}
skipsdist = True
skip_missing_interpreters=True

[testenv:lint]
deps = flake8
commands = flake8 src/{[project-info]package} tests {posargs}

[testenv]
deps = poetry
passenv={[project-info]passenv}
whitelist_externals={[project-info]whitelist_externals}
setenv =
    PYTHONPATH = {toxinidir}/jsonsimpleconfig
    LOG_FORMAT = %(levelname)s: %(message)s
commands =
    poetry export -f requirements.txt -o requirements.tox.txt --dev --without-hashes
    pip install -rrequirements.tox.txt
    py.test                             \
        --doctest-modules               \
        --junitxml=junit.xml            \
        --cov jsonsimpleconfig          \
        --cov-report xml                \
        --cov-report html               \
        --cov-report term               \
        --cov-fail-under {env:COV_THRESHOLD:50} \
        -vv \
        {posargs}
